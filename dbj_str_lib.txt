
---------------------------------------------------------------------------------------------
dbj_str_sawmill 
---------------------------------------------------------------------------------------------

Spaces have been removed from the input str before calling. 
Thus the input:

str == "onetwoonethreeonefour"
brk == "one"

The desired output is the list: {"two", "three", "four"}

Algorithm Description

Core of the processing is the (internal) function next_element()

char * next_element ( char ** /*str*/ , char * /*brk*/ );

char * str = "one two one three one four";
char * brk = "one" ;

while ( str != 0 ) {
   char * element = next_element ( &str , brk );
}

Return is next element obtained 
Processing stops when the first argument points to NULL.

Given the input as above next_element(), behaves like this
(without all arg's repeated etc...):

char * next_element ( "onetwoonethreeonefour" ) --> str == "twoonethreeonefour", returns NULL

char * next_element ( "twoonethreeonefour"    ) --> str == "threeonefour", returns "two"

char * next_element ( "threeonefour"          ) --> str == "four", returns "three"

char * next_element ( "four"                  ) --> str == 0, returns "four" 

Processing stops.

---------------------------------------------------------------------------------------------

char * retval[] = {0}
